package dao;

import java.util.List;

import model.Eletrodo;
import model.MatrizAdjacencia;

import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;

public class GrafoDao {
	private List listaMatrizAdjacencia;
	private Eletrodo eletrodo1;
	private Eletrodo eletrodo2;
	private Eletrodo eletrodo3;
	private Eletrodo eletrodo4;
	private Eletrodo eletrodo5;
	private Eletrodo eletrodo6;
	private Eletrodo eletrodo7;
	private Eletrodo eletrodo8;
	public GrafoDao() {
		 Eletrodo eletrodo1 = new Eletrodo();
		 Eletrodo eletrodo2 = new Eletrodo();
		 Eletrodo eletrodo3 = new Eletrodo();
		 Eletrodo eletrodo4 = new Eletrodo();
		 Eletrodo eletrodo5 = new Eletrodo();
		 Eletrodo eletrodo6 = new Eletrodo();
		 Eletrodo eletrodo7 = new Eletrodo();
		 Eletrodo eletrodo8 = new Eletrodo();
		
		try {
		      FileReader arq = new FileReader("f:/data.txt");
		      BufferedReader lerArq = new BufferedReader(arq);
		 
		      String linha = lerArq.readLine(); // lê a primeira linha
		// a variável "linha" recebe o valor "null" quando o processo
		// de repetição atingir o final do arquivo texto
		     while (linha != null) {
		        String[] arrayLinha = linha.split(",");
		        System.out.println(linha);
		        eletrodo1.adicionarValor(Double.parseDouble(arrayLinha[1]));
		        eletrodo2.adicionarValor(Double.parseDouble(arrayLinha[2]));
		        eletrodo3.adicionarValor(Double.parseDouble(arrayLinha[3]));
		        eletrodo4.adicionarValor(Double.parseDouble(arrayLinha[4]));
		        eletrodo5.adicionarValor(Double.parseDouble(arrayLinha[5]));
		        eletrodo6.adicionarValor(Double.parseDouble(arrayLinha[6]));
		        eletrodo7.adicionarValor(Double.parseDouble(arrayLinha[7]));
		        eletrodo8.adicionarValor(Double.parseDouble(arrayLinha[8]));
		        linha = lerArq.readLine(); // lê da segunda até a última linha
		      }
		      //System.out.println(linha);
		      arq.close();
		    } catch (IOException e) {
		        System.err.printf("Erro na abertura do arquivo: %s.\n",
		          e.getMessage());
		    }
		
			
		
		eletrodo1.
		listaMatrizAdjacencia = new ArrayList();
		MatrizAdjacencia matriz = new MatrizAdjacencia();
		matriz.setDados(new double[][] {{0,1,1,1,0,1,1,1},
										{1,0,1,1,1,1,1,1},
										{1,1,0,1,1,0,1,1},
										{1,1,1,0,0,1,1,1},
										{0,1,1,0,0,1,1,0},
										{1,1,0,1,1,0,1,1},
										{1,1,1,1,1,1,0,1},
										{1,1,1,1,0,1,1,0}});
		listaMatrizAdjacencia.add(matriz);
		matriz = new MatrizAdjacencia();
		matriz.setDados(new double[][] {{0,0,1,1,1,1,1,1},
										{0,0,0,1,1,0,1,1},
										{1,0,0,0,1,1,1,1},
										{1,1,0,0,0,1,1,1},
										{1,1,1,0,0,0,1,1},
										{1,0,1,1,0,0,0,1},
										{1,1,1,1,1,0,0,0},
										{1,1,1,1,1,1,0,0}});
		listaMatrizAdjacencia.add(matriz);
		matriz = new MatrizAdjacencia();
		matriz.setDados(new double[][] {{0,1,1,1,1,1,1,1},
										{1,0,1,1,1,1,1,1},
										{1,1,0,1,1,1,1,1},
										{1,1,1,0,1,1,1,1},
										{1,1,1,1,0,1,1,1},
										{1,1,1,1,1,0,1,1},
										{1,1,1,1,1,1,0,1},
										{1,1,1,1,1,1,1,0}});
		listaMatrizAdjacencia.add(matriz);
		matriz = new MatrizAdjacencia();
		matriz.setDados(new double[][] {{0,1,1,0,0,1,1,0},
										{1,0,1,1,1,1,1,0},
										{1,1,0,1,1,1,1,1},
										{0,1,1,0,1,1,1,1},
										{0,1,1,1,0,0,1,0},
										{1,1,1,1,0,0,1,1},
										{1,1,1,1,1,1,0,1},
										{0,0,1,1,0,1,1,0}});
		listaMatrizAdjacencia.add(matriz);
		matriz = new MatrizAdjacencia();
		matriz.setDados(new double[][] {{0,1,1,1,1,1,1,1},
										{1,0,1,1,1,1,1,1},
										{1,1,0,1,1,1,1,1},
										{1,1,1,0,1,1,1,0},
										{1,1,1,1,0,1,1,0},
										{1,1,1,1,1,0,1,0},
										{1,1,1,1,1,1,0,0},
										{1,1,1,0,0,0,0,0}});
		listaMatrizAdjacencia.add(matriz);
		matriz = new MatrizAdjacencia();
		matriz.setDados(new double[][] {{0,0,0,1,1,1,1,1},
										{0,0,1,1,1,1,1,1},
										{0,1,0,1,1,1,1,1},
										{1,1,1,0,0,1,1,1},
										{1,1,1,0,0,0,0,1},
										{1,1,1,1,0,0,0,0},
										{1,1,1,1,0,0,0,0},
										{1,1,1,1,1,0,0,0}});
		listaMatrizAdjacencia.add(matriz);
		matriz = new MatrizAdjacencia();
		matriz.setDados(new double[][] {{0,1,1,1,1,1,1,0},
										{1,0,1,1,1,1,0,1},
										{1,1,0,0,1,0,1,1},
										{1,1,0,0,0,1,1,1},
										{1,1,1,0,0,0,1,1},
										{1,1,0,1,0,0,1,1},
										{1,0,1,1,1,1,0,1},
										{0,1,1,1,1,1,1,0}});
		listaMatrizAdjacencia.add(matriz);
	}
	public MatrizAdjacencia geMatrizAdjacencia() throws IndexOutOfBoundsException{	
	MatrizAdjacencia matriz =  (MatrizAdjacencia) this.listaMatrizAdjacencia.get(0);
	this.listaMatrizAdjacencia.remove(0);
	return matriz;
	}
}
